@page "/"
@inject HttpClient httpClient
@inject NavigationManager navigationManager


<PageTitle>Usuarios</PageTitle>


@*<Lifecycle />*@

@if (_users == null)
{

    <p>Loading users...</p>

}
else
{
    <UserDetails User="_selectedUser" />

    <UserSearch /> 

    <div class="grid">
        @*Aqui creamos cada tarjeta y las agrupamos con la clase .grid y le pasamos los datos del usuario desde User.cs*@
        @foreach (var user in _users)
        {
            <UserCard User="user" OnSelected="HandleUserSelected" />
        }
    </div>

}




@code {
    private IEnumerable<User>? _users;
    private User? _selectedUser;

    protected override async
    Task OnInitializedAsync()
    {
        try
        {
            var baseUri = navigationManager.BaseUri;
            var usersUrl = $"{baseUri}Users/users-data.json";
            _users = await httpClient.GetFromJsonAsync<IEnumerable<User>>(usersUrl);

        }
        catch (HttpRequestException ex)
        {
            Console.WriteLine($"There was a problem user data: {ex.Message}");
        }



    }

    private void HandleUserSelected(User user)
    =>
    _selectedUser = user;




}


